<!DOCTYPE html>
<html ng-app="app">
  <head>
    <title ng-cloak><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />

  </head>
  <body ng-controller="NavController">
    <h1><%= title %> <span ng-show="period"> - {{period}}</span></h1>

    <div class="data-view">
        <a href="/#">Default</a> |
        <a href="/#/view/bu-and-channel">By BU and Channel</a> |
        <a href="/#/view/team-capacity">By Team Capacity</a>
    </div>

    <div class="period">
      <select ng-options="period as period.period for period in periods"
        ng-model="selectedItem" ng-change="setPeriod()"></select>
    </div>

    <ul class="nav">
      <li ng-repeat="navitem in nav" ng-click="filter(navitem)"
          ng-class="{selected:navitem.route == category,overall:navitem.route == ''}">
        <a href="/#"><div ng-class="navitem.route">{{navitem.name}}</div></a>
      </li>
    </ul>

    <ng-view></ng-view>

    <!-- Libraries -->
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular-route.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular-resource.min.js"></script>

    <script>
      angular.module('app', ['ngRoute', 'ngResource'])

        //---------------
        // Services
        //---------------

        .factory('Categories', ['$resource', function($resource) {
          return $resource('/categories');
        }])

        .factory('Periods', ['$resource', function($resource) {
          return $resource('/periods');
        }])

        .factory('Teams', ['$resource', function($resource) {
          return $resource('/teams');
        }])

        .factory('Prioritisations', ['$resource', function($resource){
          return $resource('/prioritisations/:id', null, {
            'update': { method:'PUT' }
          })
        }])

        .factory('BuAndChannel', ['$resource', function($resource){
          return $resource('/prioritisations/view/bu-and-channel');
        }])

        .factory('TeamCapacity', ['$resource', function($resource){
          return $resource('/prioritisations/view/team-capacity');
        }])

        //---------------
        // Controllers
        //---------------

        .controller('NavController', ['$scope', '$rootScope', 'Categories', 'Periods', 'Teams', function ($scope, $rootScope, Categories, Periods, Teams) {

          $scope.nav = Categories.query();
          $scope.periods = Periods.query()
          $scope.periods.$promise.then(function() {
            $scope.selectedItem = $scope.periods[0];
            $scope.setPeriod();
          });
          $scope.teams = Teams.query();

          $scope.category = '';
          $scope.filter = function(item) {
            $scope.category = item.route
            $rootScope.category = item
            $rootScope.showNewTask = item.route != ''
          };

          $scope.setPeriod = function() {
            $scope.period = $scope.selectedItem.period
          }
        }])

        .controller('PrioritisationsController', ['$scope', '$rootScope', 'Prioritisations', '$filter', function ($scope, $rootScope, Prioritisations, $filter) {
          $scope.editing = [];
          $scope.prioritisations = Prioritisations.query();

          $scope.save = function(){
            if(!$scope.newPrioritisation || $scope.newPrioritisation.length < 1) return;
            var saveObject = {
              'epic-title': $scope.newPrioritisation,
              'product-group': $rootScope.category.name,
              'product-route': $rootScope.category.route,
              'optional': $rootScope.category.optional,
              'period': $scope.period
            }
            var optional = $rootScope.category.optional
            if (optional) {
              saveObject.optional = []
              angular.forEach(optional, function(field) {
                saveObject.optional.push({field: field, value: ''})
              })
            }
            prioritisation = new Prioritisations(saveObject);
            prioritisation.$save(function(){
              $scope.prioritisations.push(prioritisation);
              $scope.newPrioritisation = ''; // clear textbox
            });
          }

          $scope.remove = function(prioritisation) {
            if (confirm("Deleting '" + prioritisation['epic-title'] + "' - continue?'")) {
              var prioritisations = []
              angular.forEach($scope.prioritisations, function(item) {
                if (item._id != prioritisation._id) { prioritisations.push(item)}
              })
              Prioritisations.remove({id: prioritisation._id}, function(){
                $scope.prioritisations = prioritisations;
              });
            }
          }
        }])

        .controller('PrioritisationDetailCtrl', ['$scope', '$rootScope', '$routeParams', 'Prioritisations', function ($scope, $rootScope, $routeParams, Prioritisations) {
          $scope.update = function() {
            $scope.prioritisation.priority = $scope.priorityTotal;
            $scope.prioritisation.period = $scope.period;
            $scope.prioritisation.team = $scope.selectedTeam;

            Prioritisations.update({id: $scope.prioritisation._id}, $scope.prioritisation);
          }

          $scope.updateValues = function(fields) {
            var total = 0
            angular.forEach(fields, function(field) {
                total = total + parseInt($scope.prioritisation[field])
            })
            return total
          }

          $scope.updateValue = function() {
            var fields = [
              'value-customer-benefit',
              'value-incremental-sales',
              'value-cost-reduction',
              'value-legal',
              'value-stability']
            $scope.valueTotal = $scope.updateValues(fields)
            $scope.updatePriority()
          }

          $scope.updateDoability = function() {
              var fields = ['doability-size','doability-complexity']
              $scope.doabilityTotal = $scope.updateValues(fields)
              $scope.updatePriority()
          }

          $scope.updatePriority = function() {
            if ($scope.valueTotal && $scope.doabilityTotal) {
              $scope.priorityTotal = Math.round((100 * $scope.valueTotal) / $scope.doabilityTotal)
            }
          }

          $scope.valueTotal = 0
          $scope.doabilityTotal = 0
          $scope.priorityTotal = 0

          $scope.prioritisation = Prioritisations.get({id: $routeParams.id }, function(data) {
            $scope.updateDoability()
            $scope.updateValue()
            $scope.selectedTeam = data.team
          })

        }])

        .controller('BuAndChannelController', ['$scope', '$rootScope', '$http', 'BuAndChannel', function ($scope, $rootScope, $http, BuAndChannel) {
          $scope.prioritisations = BuAndChannel.get();
        }])

        .controller('TeamCapacityController', ['$scope', '$rootScope', '$http', 'TeamCapacity', function ($scope, $rootScope, $http, TeamCapacity) {
          $scope.prioritisations = TeamCapacity.get();
        }])

        //---------------
        // Routes
        //---------------

        .config(['$routeProvider', function ($routeProvider) {
          $routeProvider
            .when('/', {
              templateUrl: 'templates/prioritisations.html',
              controller: 'PrioritisationsController',
            })

            .when('/:id', {
              templateUrl: 'templates/prioritisationDetails.html',
              controller: 'PrioritisationDetailCtrl'
           })

           .when('/view/bu-and-channel', {
             templateUrl: 'templates/view/buAndChannel.html',
             controller: 'BuAndChannelController',
           })

           .when('/view/team-capacity', {
             templateUrl: 'templates/view/teamCapacity.html',
             controller: 'TeamCapacityController',
           })
        }]);
    </script>

  </body>
</html>
